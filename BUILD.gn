# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//third_party/cups/cups.gni")

CUPS_CODE_DIR = "//third_party/cups/cups-2.4.0"
CUPS_FILTERS_CODE_DIR = "//third_party/cups-filters"
SUBSYSTEM_NAME = "thirdparty"
PART_NAME = "cups-filters"

group("third_party_cupsfilters"){
    deps = [
        ":cupsfilters",
        ":imagetoraster",
        ":cupsfilters.types",
        ":cupsfilters.convs",
        ":turbojpeg"
    ]
}

config("cups_filters_config") {
    include_dirs = [
        ".",
        "$CUPS_CODE_DIR",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/",
        "$CUPS_FILTERS_CODE_DIR/filter/"
    ]

    defines = cups_defines

    cflags = [
        "-D_PPD_DEPRECATED",
        "-Wextra",
        "-Wall",
        "-Wno-unused-parameter",
        "-Wno-unused-function",
        "-Wno-unused-variable",
        "-Wno-unused-value",
        "-Wno-sign-compare",
        "-Wno-missing-filed-initializers",

        "-Wno-strlcpy-strlcat-size",
        "-Wtautological-pointer-compare",
        "-Wimplicit-fallthrough",
        "-Wno-implicit-function-declaration",
        "-w"
    ]
}

ohos_shared_library("cupsfilters") {
    sources = [
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/attr.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/check.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/cmyk.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/colord.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/colormanager.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/dither.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/pdftoippprinter.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-bmp.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-colorspace.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-gif.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-jpeg.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-photocd.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-pix.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-png.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-pnm.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-sgi.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-sgilib.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-sun.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-tiff.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/image-zoom.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/ipp.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/lut.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/pack.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/ppdgenerator.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/raster.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/rgb.c",
        "$CUPS_FILTERS_CODE_DIR/cupsfilters/srgb.c",
    ]

    public_configs = [ ":cups_filters_config" ]

    deps = [
        "//third_party/cups:cups",
        "//third_party/libjpeg-turbo:turbojpeg",
        "//third_party/libpng:libpng",
        "//third_party/zlib:libz"
    ]

    install_enable = true
    subsystem_name = "$SUBSYSTEM_NAME"
    part_name = "$PART_NAME"
}

ohos_executable("imagetoraster") {
    sources = [
        "$CUPS_FILTERS_CODE_DIR/filter/common.c",
        "$CUPS_FILTERS_CODE_DIR/filter/imagetoraster.c",
    ]

    deps = [
        "//third_party/cups:cups",
        "//third_party/cups-filters:cupsfilters",
    ]

    public_configs = [ ":cups_filters_config" ]

    module_install_dir = "$cups_serverbin_dir/filter"
    install_enable = true
    subsystem_name = "$SUBSYSTEM_NAME"
    part_name = "$PART_NAME"
}

ohos_prebuilt_etc("cupsfilters.convs") {
    exec_script("generate_cupsfilters_convs.py")
    source = "mime/cupsfilters.convs"
    relative_install_dir = "cups/share/mime"
    subsystem_name = "$SUBSYSTEM_NAME"
    part_name = "$PART_NAME"
}

ohos_prebuilt_etc("cupsfilters.types") {
    source = "mime/cupsfilters.types"
    relative_install_dir = "cups/share/mime"
    subsystem_name = "$SUBSYSTEM_NAME"
    part_name = "$PART_NAME"
}

#start of jpeg
JPEG_CODE_ROOT = "//third_party/libjpeg-turbo"
jpeg_sources = [
    "$JPEG_CODE_ROOT/jcapimin.c",
    "$JPEG_CODE_ROOT/jcapistd.c",
    "$JPEG_CODE_ROOT/jccoefct.c",
    "$JPEG_CODE_ROOT/jccolor.c",
    "$JPEG_CODE_ROOT/jcdctmgr.c",
    "$JPEG_CODE_ROOT/jchuff.c",
    "$JPEG_CODE_ROOT/jcicc.c",
    "$JPEG_CODE_ROOT/jcinit.c",
    "$JPEG_CODE_ROOT/jcmainct.c",
    "$JPEG_CODE_ROOT/jcmarker.c",
    "$JPEG_CODE_ROOT/jcmaster.c",
    "$JPEG_CODE_ROOT/jcomapi.c",
    "$JPEG_CODE_ROOT/jcparam.c",
    "$JPEG_CODE_ROOT/jcphuff.c",
    "$JPEG_CODE_ROOT/jcprepct.c",
    "$JPEG_CODE_ROOT/jcsample.c",
    "$JPEG_CODE_ROOT/jctrans.c",
    "$JPEG_CODE_ROOT/jdapimin.c",
    "$JPEG_CODE_ROOT/jdapistd.c",
    "$JPEG_CODE_ROOT/jdatadst.c",
    "$JPEG_CODE_ROOT/jdatasrc.c",
    "$JPEG_CODE_ROOT/jdcoefct.c",
    "$JPEG_CODE_ROOT/jdcolor.c",
    "$JPEG_CODE_ROOT/jddctmgr.c",
    "$JPEG_CODE_ROOT/jdhuff.c",
    "$JPEG_CODE_ROOT/jdicc.c",
    "$JPEG_CODE_ROOT/jdinput.c",
    "$JPEG_CODE_ROOT/jdmainct.c",
    "$JPEG_CODE_ROOT/jdmarker.c",
    "$JPEG_CODE_ROOT/jdmaster.c",
    "$JPEG_CODE_ROOT/jdmerge.c",
    "$JPEG_CODE_ROOT/jdphuff.c",
    "$JPEG_CODE_ROOT/jdpostct.c",
    "$JPEG_CODE_ROOT/jdsample.c",
    "$JPEG_CODE_ROOT/jdtrans.c",
    "$JPEG_CODE_ROOT/jerror.c",
    "$JPEG_CODE_ROOT/jfdctflt.c",
    "$JPEG_CODE_ROOT/jfdctfst.c",
    "$JPEG_CODE_ROOT/jfdctint.c",
    "$JPEG_CODE_ROOT/jidctflt.c",
    "$JPEG_CODE_ROOT/jidctfst.c",
    "$JPEG_CODE_ROOT/jidctint.c",
    "$JPEG_CODE_ROOT/jidctred.c",
    "$JPEG_CODE_ROOT/jmemmgr.c",
    "$JPEG_CODE_ROOT/jmemnobs.c",
    "$JPEG_CODE_ROOT/jquant1.c",
    "$JPEG_CODE_ROOT/jquant2.c",
    "$JPEG_CODE_ROOT/jutils.c",
]

include_dirs = []
define_config = []
cflags = []

mkernel = defined(ohos_kernel_type) && ohos_kernel_type == "liteos_m"
if (mkernel || is_win) {
  jpeg_sources += [ "jsimd_none.c" ]
  define_config += [
    "NO_PUTENV",
    "NO_GETENV",
  ]
} else if (current_cpu == "arm" || current_cpu == "arm64") {
  jpeg_sources += [
    "$JPEG_CODE_ROOT/simd/arm/jcgray-neon.c",
    "$JPEG_CODE_ROOT/simd/arm/jcphuff-neon.c",
    "$JPEG_CODE_ROOT/simd/arm/jcsample-neon.c",
    "$JPEG_CODE_ROOT/simd/arm/jdmerge-neon.c",
    "$JPEG_CODE_ROOT/simd/arm/jdsample-neon.c",
    "$JPEG_CODE_ROOT/simd/arm/jfdctfst-neon.c",
    "$JPEG_CODE_ROOT/simd/arm/jidctred-neon.c",
    "$JPEG_CODE_ROOT/simd/arm/jquanti-neon.c",
  ]

  # NEON_INTRINSICS as default
  jpeg_sources += [
    "$JPEG_CODE_ROOT/simd/arm/jccolor-neon.c",
    "$JPEG_CODE_ROOT/simd/arm/jidctfst-neon.c",
    "$JPEG_CODE_ROOT/simd/arm/jidctint-neon.c",
  ]
  define_config += [ "NEON_INTRINSICS" ]
  cflags += [ "-DNEON_INTRINSICS" ]
  include_dirs += [ "//third_party/libjpeg-turbo/simd/arm" ]
  if (current_cpu == "arm") {
    jpeg_sources += [
      "$JPEG_CODE_ROOT/simd/arm/aarch32/jchuff-neon.c",
      "$JPEG_CODE_ROOT/simd/arm/aarch32/jsimd.c",
      "$JPEG_CODE_ROOT/simd/arm/jdcolor-neon.c",
      "$JPEG_CODE_ROOT/simd/arm/jfdctint-neon.c",
    ]
    cflags += [
      "-mfpu=neon",
      "-mfloat-abi=softfp",
    ]
  } else {
    jpeg_sources += [
      "$JPEG_CODE_ROOT/simd/arm/aarch64/jchuff-neon.c",
      "$JPEG_CODE_ROOT/simd/arm/aarch64/jsimd.c",
      "$JPEG_CODE_ROOT/simd/arm/jdcolor-neon.c",
      "$JPEG_CODE_ROOT/simd/arm/jfdctint-neon.c",
    ]
  }
} else {
  jpeg_sources += [ "$JPEG_CODE_ROOT/jsimd_none.c" ]
}

jpeg_sources += [
# enable arith codec
    "$JPEG_CODE_ROOT/jaricom.c",
    "$JPEG_CODE_ROOT/jcarith.c",
    "$JPEG_CODE_ROOT/jdarith.c",
    "$JPEG_CODE_ROOT/jdatadst-tj.c",
    "$JPEG_CODE_ROOT/jdatasrc-tj.c",
    "$JPEG_CODE_ROOT/rdbmp.c",
    "$JPEG_CODE_ROOT/rdppm.c",
    "$JPEG_CODE_ROOT/transupp.c",

    # enable turbo
    "$JPEG_CODE_ROOT/turbojpeg.c",
    "$JPEG_CODE_ROOT/wrbmp.c",
    "$JPEG_CODE_ROOT/wrppm.c",
]
define_config += [
    "C_ARITH_CODING_SUPPORTED=1",  #Support arithmetic encoding
    "D_ARITH_CODING_SUPPORTED=1",  #Support arithmetic decoding
    "BMP_SUPPORTED=1",  #Support arithmetic decoding
    "PPM_SUPPORTED=1",  #Support arithmetic decoding
]

config("turbojpeg_config") {
    include_dirs += [ "//third_party/libjpeg-turbo" ]
    defines = define_config
}

ohos_shared_library("turbojpeg") {
    sources = jpeg_sources
    public_configs = [ ":turbojpeg_config" ]
    subsystem_name = "$SUBSYSTEM_NAME"
    part_name = "$PART_NAME"
}
